{
	"info": {
		"_postman_id": "b9747882-6e81-4cc0-935f-ab13974b71b6",
		"name": "D-Money API Assignment",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29201751",
		"_collection_link": "https://speeding-crescent-241891.postman.co/workspace/RoadtoSDET~b8399dbe-c5dc-4481-aaf7-e12059814994/collection/29201751-b9747882-6e81-4cc0-935f-ab13974b71b6?action=share&source=collection_link&creator=29201751"
	},
	"item": [
		{
			"name": "Admin Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsondata=pm.response.json();\r",
							"var token=jsondata.token;\r",
							"pm.collectionVariables.set(\"token\",token)\r",
							"pm.environment.set(\"token\",token)\r",
							"\r",
							"pm.test(\"User Should login Successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"Login successfully\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"admin@roadtocareer.net\",\r\n    \"password\":\"1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://dmoney.roadtocareer.net/user/login",
					"protocol": "https",
					"host": [
						"dmoney",
						"roadtocareer",
						"net"
					],
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "User login by wrong cred",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User shouldn't login by wrong creds\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"Password incorrect\");\r",
							"});\r",
							"pm.test(\"Status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"admin@roadtocareer.net\",\r\n    \"password\":\"12345\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://dmoney.roadtocareer.net/user/login",
					"protocol": "https",
					"host": [
						"dmoney",
						"roadtocareer",
						"net"
					],
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Agent Create",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomId=_.random(10000,99999)\r",
							"var phoneNumber=\"0175\"+_.random(1000000,9999999)\r",
							"pm.collectionVariables.set(\"randomId\",randomId)\r",
							"pm.collectionVariables.set(\"phoneNumber\",phoneNumber)\r",
							"\r",
							"pm.environment.set(\"randomId\",randomId)\r",
							"pm.environment.set(\"phoneNumber\",phoneNumber)\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User should created successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User created\");\r",
							"});\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"var jsonData= pm.response.json();\r",
							"var id= jsonData.user.id;\r",
							"var phonenumber=jsonData.user.phone_number;\r",
							"pm.collectionVariables.set(\"userId\",id)\r",
							"pm.collectionVariables.set(\"customer_phone_number\",phonenumber)\r",
							"\r",
							"pm.environment.set(\"userId\",id)\r",
							"pm.environment.set(\"customer_phone_number\",phonenumber)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-Auth-Secret-Key",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"{{phoneNumber}}\",\r\n    \"nid\":\"123456789\",\r\n    \"role\":\"Agent\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/user/create",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Agent Create With exist email",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomId=_.random(10000,99999)\r",
							"var phoneNumber=\"0175\"+_.random(1000000,9999999)\r",
							"pm.collectionVariables.set(\"randomId\",randomId)\r",
							"pm.collectionVariables.set(\"phoneNumber\",phoneNumber)\r",
							"\r",
							"pm.environment.set(\"randomId\",randomId)\r",
							"pm.environment.set(\"phoneNumber\",phoneNumber)\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User shouldn't create with exist email \", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"User already exists\");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 208\", function () {\r",
							"    pm.response.to.have.status(208);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-Auth-Secret-Key",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"Denis_Larkin@hotmail.com\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"{{phoneNumber}}\",\r\n    \"nid\":\"123456789\",\r\n    \"role\":\"Agent\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/user/create",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Customer 1 create",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomId=_.random(10000,99999)\r",
							"var phoneNumber=\"0175\"+_.random(1000000,9999999)\r",
							"pm.collectionVariables.set(\"randomId\",randomId)\r",
							"pm.collectionVariables.set(\"phoneNumber\",phoneNumber)\r",
							"\r",
							"pm.environment.set(\"randomId\",randomId)\r",
							"pm.environment.set(\"phoneNumber\",phoneNumber)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User should created successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User created\");\r",
							"});\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"var jsonData= pm.response.json();\r",
							"var id= jsonData.user.id;\r",
							"var phonenumber=jsonData.user.phone_number;\r",
							"pm.collectionVariables.set(\"userId\",id)\r",
							"pm.collectionVariables.set(\"customer_phone_number\",phonenumber)\r",
							"\r",
							"pm.environment.set(\"userId\",id)\r",
							"pm.environment.set(\"customer_phone_number\",phonenumber)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-Auth-Secret-Key",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"{{phoneNumber}}\",\r\n    \"nid\":\"123456789\",\r\n    \"role\":\"Customer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/user/create",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Customer 1 create with exist phone number",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomId=_.random(10000,99999)\r",
							"var phoneNumber=\"0175\"+_.random(1000000,9999999)\r",
							"pm.collectionVariables.set(\"randomId\",randomId)\r",
							"pm.collectionVariables.set(\"phoneNumber\",phoneNumber)\r",
							"\r",
							"pm.environment.set(\"randomId\",randomId)\r",
							"pm.environment.set(\"phoneNumber\",phoneNumber)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User shouldn't created successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User already exists\");\r",
							"});\r",
							"pm.test(\"Status code is 208\", function () {\r",
							"    pm.response.to.have.status(208);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-Auth-Secret-Key",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"01758902936\",\r\n    \"nid\":\"123456789\",\r\n    \"role\":\"Customer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/user/create",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Customer 2 create",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomId=_.random(10000,99999)\r",
							"var phoneNumber=\"0175\"+_.random(1000000,9999999)\r",
							"pm.collectionVariables.set(\"randomId\",randomId)\r",
							"pm.collectionVariables.set(\"phoneNumber\",phoneNumber)\r",
							"\r",
							"pm.environment.set(\"randomId\",randomId)\r",
							"pm.environment.set(\"phoneNumber\",phoneNumber)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User should created successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User created\");\r",
							"});\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"var jsonData= pm.response.json();\r",
							"var id= jsonData.user.id;\r",
							"var phonenumber=jsonData.user.phone_number;\r",
							"pm.collectionVariables.set(\"userId\",id)\r",
							"pm.collectionVariables.set(\"customer_phone_number\",phonenumber)\r",
							"\r",
							"pm.environment.set(\"userId\",id)\r",
							"pm.environment.set(\"customer_phone_number\",phonenumber)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-Auth-Secret-Key",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"{{phoneNumber}}\",\r\n    \"nid\":\"123456789\",\r\n    \"role\":\"Customer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/user/create",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Customer 2 create with exist email",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomId=_.random(10000,99999)\r",
							"var phoneNumber=\"0175\"+_.random(1000000,9999999)\r",
							"pm.collectionVariables.set(\"randomId\",randomId)\r",
							"pm.collectionVariables.set(\"phoneNumber\",phoneNumber)\r",
							"\r",
							"pm.environment.set(\"randomId\",randomId)\r",
							"pm.environment.set(\"phoneNumber\",phoneNumber)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User shouldn't created successfully\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User already exists\");\r",
							"});\r",
							"pm.test(\"Status code is 208\", function () {\r",
							"    pm.response.to.have.status(208);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-Auth-Secret-Key",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"Patricia.Predovic41@hotmail.com\",\r\n    \"password\":\"1234\",\r\n    \"phone_number\":\"{{phoneNumber}}\",\r\n    \"nid\":\"123456789\",\r\n    \"role\":\"Customer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/user/create",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deposit System to Agent",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Check if deposit successful\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"Deposit successful\");\r",
							"});\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-Auth-Secret-Key",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"SYSTEM\",\r\n    \"to_account\":\"01754107955\",\r\n    \"amount\":50\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/transaction/deposit",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"transaction",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deposit System to Agent below minimum amount",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"User shouldn't deposit by below minimum amount\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"Minimum deposit amount 10 tk\");\r",
							"});\r",
							"pm.test(\"Status code is 208\", function () {\r",
							"    pm.response.to.have.status(208);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-Auth-Secret-Key",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"SYSTEM\",\r\n    \"to_account\":\"01752507570\",\r\n    \"amount\":9\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/transaction/deposit",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"transaction",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Agent deposit to customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check if deposit sucessful\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"Deposit successful\");\r",
							"});\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-Auth-Secret-Key",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"01752507570\",\r\n    \"to_account\":\"01752517078\",\r\n    \"amount\":80\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/transaction/deposit",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"transaction",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "agent deposit to unknown account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Agent shouldn't deposit to unknown account\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"Account does not exist\");\r",
							"});\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-Auth-Secret-Key",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"01752507570\",\r\n    \"to_account\":\"017525\",\r\n    \"amount\":1000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/transaction/deposit",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"transaction",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check agent balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check if agent balance show\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"User balance\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-Auth-Secret-Key",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}/transaction/balance/01752507570",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"transaction",
						"balance",
						"01752507570"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check agent balance by invalid number",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Agent shouldn't check balance with invalid number\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"User not found\");\r",
							"});\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-Auth-Secret-Key",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}/transaction/balance/017525075709",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"transaction",
						"balance",
						"017525075709"
					]
				}
			},
			"response": []
		},
		{
			"name": "Withdraw by the customer from agent",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check if withdraw successful\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"Withdraw successful\");\r",
							"});\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-Auth-Secret-Key",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"01755581602\",\r\n    \"to_account\":\"01752507570\",\r\n    \"amount\":600\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/transaction/withdraw",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"transaction",
						"withdraw"
					]
				}
			},
			"response": []
		},
		{
			"name": "Withdraw by the customer from agent with insufficient balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Customer sholdn't withdraw money if don't have sufficient balance\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"Insufficient balance\");\r",
							"});\r",
							"pm.test(\"Status code is 208\", function () {\r",
							"    pm.response.to.have.status(208);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-Auth-Secret-Key",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"01752517078\",\r\n    \"to_account\":\"01752507570\",\r\n    \"amount\":100000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/transaction/withdraw",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"transaction",
						"withdraw"
					]
				}
			},
			"response": []
		},
		{
			"name": "Customer check balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"customer should check his balance\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"User balance\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-Auth-Secret-Key",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}/transaction/balance/01752517078",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"transaction",
						"balance",
						"01752517078"
					]
				}
			},
			"response": []
		},
		{
			"name": "Customer check balance by invalid number",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Customer should't check balance with invalid number \", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"User not found\");\r",
							"});\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-Auth-Secret-Key",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}/transaction/balance/0175251",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"transaction",
						"balance",
						"0175251"
					]
				}
			},
			"response": []
		},
		{
			"name": "Send money to other customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check if sendmoney successful\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"money successful\");\r",
							"});\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-Auth-Secret-Key",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"01752517078\",\r\n    \"to_account\":\"01752397603\",\r\n    \"amount\":70\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/transaction/sendmoney",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"transaction",
						"sendmoney"
					]
				}
			},
			"response": []
		},
		{
			"name": "Customer send money to Agent number",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Customer should't send money to agent\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"account should not be an agent account\");\r",
							"});\r",
							"pm.test(\"Status code is 208\", function () {\r",
							"    pm.response.to.have.status(208);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-Auth-Secret-Key",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"01752517078\",\r\n    \"to_account\":\"01756729149\",\r\n    \"amount\":600\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/transaction/sendmoney",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"transaction",
						"sendmoney"
					]
				}
			},
			"response": []
		},
		{
			"name": "Another customer payment to merchant",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Customer should payment to merchant\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"Payment successful\");\r",
							"});\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-Auth-Secret-Key",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"01752397603\",\r\n    \"to_account\":\"01686606905\",\r\n    \"amount\":10\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/transaction/payment",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"transaction",
						"payment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Another customer payment to merchant with insufficient balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Customer shouldn't payment to merchant if have Insufficient balance\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"Insufficient balance\");\r",
							"});\r",
							"pm.test(\"Status code is 208\", function () {\r",
							"    pm.response.to.have.status(208);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "X-Auth-Secret-Key",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"from_account\":\"01752397603\",\r\n    \"to_account\":\"01686606905\",\r\n    \"amount\":1300\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/transaction/payment",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"transaction",
						"payment"
					]
				}
			},
			"response": []
		},
		{
			"name": "Another customer check balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"User balance\");\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-Auth-Secret-Key",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}/transaction/balance/01752397603",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"transaction",
						"balance",
						"01752397603"
					]
				}
			},
			"response": []
		},
		{
			"name": "Another customer check balance by invalid number",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Customer shouldn't check balance with invalid number\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.contains(\"User not found\");\r",
							"});\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-Auth-Secret-Key",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}/transaction/balance/0175239",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"transaction",
						"balance",
						"0175239"
					]
				}
			},
			"response": []
		},
		{
			"name": "Another customer check statement",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check if another customer can see transaction list\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"Transaction list\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-Auth-Secret-Key",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}/transaction/statement/01752397603",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"transaction",
						"statement",
						"01752397603"
					]
				}
			},
			"response": []
		},
		{
			"name": "Another customer check statement by invalid number",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Customer shouldn't check statement with invalid number\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"User not found\");\r",
							"});\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-Auth-Secret-Key",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}/transaction/statement/2397603",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"transaction",
						"statement",
						"2397603"
					]
				}
			},
			"response": []
		},
		{
			"name": "Merchant check own balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check if merchant can check his own balance\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"User balance\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-Auth-Secret-Key",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}/transaction/balance/01686606905",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"transaction",
						"balance",
						"01686606905"
					]
				}
			},
			"response": []
		},
		{
			"name": "Merchant check own balance by invalid number",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Merchant shouldn't check balance by invalid number\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).contains(\"User not found\");\r",
							"});\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "value",
							"value": "{{token}}",
							"type": "string"
						},
						{
							"key": "key",
							"value": "Authorization",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "X-Auth-Secret-Key",
						"value": "ROADTOSDET",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}/transaction/balance/01686606905666666666",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"transaction",
						"balance",
						"01686606905666666666"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFkbWluQHJvYWR0b2NhcmVlci5uZXQiLCJwYXNzd29yZCI6IjEyMzQiLCJpYXQiOjE2OTM5ODY2NzQsImV4cCI6MTY5Mzk4ODQ3NH0.HDjjqLOS_PIcUN9lHjdQWQT-RZggVcNG6ACSEJsCZX4"
		},
		{
			"key": "baseURL",
			"value": "https://dmoney.roadtocareer.net",
			"type": "string"
		},
		{
			"key": "phoneNumber",
			"value": "01751121879"
		},
		{
			"key": "UserId",
			"value": 27187
		},
		{
			"key": "Name",
			"value": "Marian Boyer"
		},
		{
			"key": "Email",
			"value": "Ressie_Connelly58@yahoo.com"
		},
		{
			"key": "PhoneNumber",
			"value": "01755941333"
		},
		{
			"key": "randomId",
			"value": 47433
		},
		{
			"key": "userId",
			"value": 27230
		},
		{
			"key": "customer_phone_number",
			"value": "01758847708"
		}
	]
}